server:
  port: 8080

spring:
  application:
    name: gateway
  cloud:
    loadbalancer:
      retry:
        enabled: true
    gateway:
      server:
        webflux:
          routes:
            - id: auth_public_api
              uri: lb://auth
              predicates:
                - Path=/api/v1/auth/public/**
                - Method=GET,POST,PUT
              filters:
                - name: RewritePath
                  args:
                    regexp: /api/v1/auth/public/(?<segment>.*)
                    replacement: /api/v1/public/${segment}
                - name: CircuitBreaker
                  args:
                    name: public-service-cb
                    fallbackUri: forward:/fallback
                - name: Retry
                  args:
                    retries: 3
                    statuses: BAD_GATEWAY,INTERNAL_SERVER_ERROR
              metadata:
                priority: 1
                auth-required: false
                security-enabled: false
                remove-auth-headers: true
                public-access: true

            - id: auth_private_api
              uri: lb://auth
              predicates:
                - Path=/api/v1/auth/private/**
                - Method=GET,POST,PUT,DELETE
              filters:
                - name: RewritePath
                  args:
                    regexp: /api/v1/(?<service>[^/]+)/private/(?<segment>.*)
                    replacement: /api/v1/private/${segment}
                - name: CircuitBreaker
                  args:
                    name: public-service-cb
                    fallbackUri: forward:/fallback
                - name: Retry
                  args:
                    retries: 3
                    statuses: BAD_GATEWAY,INTERNAL_SERVER_ERROR
              metadata:
                priority: 2

  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${AUTH_SERVER_URL:localhost}:8080

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost}:${EUREKA_PORT:8080}/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: false
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: prometheus, health, metrics
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: "habilisadi_gateway"